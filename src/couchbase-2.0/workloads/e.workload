# Workload E: Short ranges (threaded conversations, where each scan is for the posts in a given thread (assumed to be clustered by thread id)
# Scan/insert ratio: 95/5
# Data size: 1 KB records (10 fields, 100 bytes each, plus key)
# Request distribution: zipfian

# The insert order is hashed, not ordered. Although the scans are ordered, it does not necessarily
# follow that the data is inserted in order. For example, posts for thread 342 may not be inserted contiguously, but
# instead interspersed with posts from lots of other threads. The way the YCSB client works is that it will pick a start
# key, and then request a number of records; this works fine even for hashed insertion.

db=com.yahoo.ycsb.couchbase.CouchbaseClient2_0
couchbase.hosts=rnd-nosql-node1,rnd-nosql-node2,rnd-nosql-node3,rnd-nosql-node4
couchbase.bucket=default
couchbase.user=
couchbase.password=
couchbase.timeout=60000
table=ut

fieldcount=10
fieldlength=100
threadcount=20
operationcount=10000
recordcount=100000000
workload=com.yahoo.ycsb.workloads.RangeScanWorkload

readallfields=true

readproportion=0
updateproportion=0
scanproportion=0.95
insertproportion=0.05

requestdistribution=zipfian

maxscanlength=100

scanlengthdistribution=uniform


